{
  "hash": "a04099d62295e8a8a7cbf0934439c87d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"One-Way ANCOVA\"\nhighlight-style: solarized\n\nembed-resources: true\n\nexecute:\n  eval: false\n---\n\n\n::: {.cell}\n\n:::\n\n\nThompson, M., Lie, Y. & Green, S. (2023). Flexible structural equation modeling approaches for analyzing means. In R. Hoyle (Ed.), *Handbook of structural equation modeling* (2nd ed., pp. 385-408). New York, NY: Guilford Press.\n\n\nThis example shows the SEM approach to a one-way ANCOVA. Results are reported in Table 21.2 (p. 393).\n\nThe data file needs rearranging before it can be used: the format needs to be changed from \"long\" to \"wide\", and the pre or before Life-Satisfaction scores need to be centered.\n\n\n#### Load package and get the data\n\nLoad the **lavaan** packages, and run `satisfactionI.r` and `ANOVA_data.r` to get and rearrange the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lavaan)\n\nsource(\"satisfactionI.r\")\nhead(df)\n\nsource(\"ANOVA_data.r\")\nhead(df)\n```\n:::\n\n\nThe variables used in this example are:\n\n - x - Coping Strategy (\"a\" - no strategy; \"b\" - discussion; \"c\" - exercise)\n - y - dependent variable (\"after\" Life-Satisfaction scores)\n - preC - pre-Life-Satisfaction grand mean centered\n\nThe steps are the same as with the one_way_ANOVA. The only difference is the addition of the covariate, preC.\n\n\n#### The models\n\nThe SEM model for one-way ANCOVA is shown below. The diagram shows the \"Less Constrained\" model - the three means, represented by the labels on the arrows connecting the \"1\" to the dependent variable, differ. To be consistent with the ANCOVA assumptions of homogeneity of variances and homogeneity of regression slopes, the residual variances and the coefficients for the covariate (preC) are each constrained to equality.\n\n![](../../Drawing_SEMs/Green_2023/one_way_ANCOVA.svg){fig-align=\"center\"}\n\nThe model statements are shown below. The \"More Constrained\" model constrains the means to equality. The \"Less Constrained\" model allows the means to differ across the groups. In both cases the residual variances and the coefficients for the covariate are constrained to equality.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels <- list(\n  \"More Constrained\" =\n    \"y ~  c(a, a, a)*1        # Means\n     y ~  c(b, b, b)*preC     # Regression slopes\n     y ~~ c(e, e, e)*y        # Variances\",\n\n  \"Less Constrained\" =\n    \"y ~  c(a1, a2, a3)*1\n     y ~  c(b, b, b)*preC\n     y ~~ c(e, e, e)*y\"\n)\n```\n:::\n\n\n\n#### Fit the models and get the results\n\nThe `lapply()` function applies the `sem()` function to the two elements of the `models` list (with `data` set to `df`, and `group` set to the `\"x\"` variable).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- lapply(models, sem, data = df, group = \"x\")\n\nlapply(fit, summary)\n```\n:::\n\n\nThe \"SEM\" sections of Table 21.2 show the means, pooled error variances, and the $\\upchi$^2^ test; the footnote to Table 21.2 gives the regression coefficients.\n\nScroll through the summaries to find the \"Intercepts\", \"Variances\", and \"Regressions\"; or extract them from the list of estimates of model parameters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Get list of estimates\nestimates <- lapply(fit, lavInspect, \"est\"); estimates\n\n## Extract means - in element \"alpha\"\nmeans <- list()\nfor (i in names(models)){\n   means[[i]] <- estimates[[i]] |>\n      lapply(\"[[\", \"alpha\") |>       # Means for Y and preC\n      sapply(\"[[\", 1)                # Means for Y\n}\nmeans <- do.call(cbind, means); means\n\n## Extract error variances -  in element \"psi\"\nErrorVar <- list()\nfor (i in names(models)){\n   ErrorVar[[i]] <- estimates[[i]] |>\n      lapply(\"[[\", \"psi\")  |>        # Extract \"psi\" element\n      sapply(\"[[\", 1, 1)             # 1st row, 1st column of \"psi\"\n}\nErrorVar <- do.call(cbind, ErrorVar); ErrorVar\n\n## Extract regression coefficients -  in element \"beta\"\nRegCoef <- list()\nfor (i in names(models)){\n   RegCoef[[i]] <- estimates[[i]] |>\n      lapply(\"[[\", \"beta\")  |>       # Extract \"beta\" element\n      sapply(\"[[\", 1, 2)             # 1st row, 2nd column of \"beta\"\n}\nRegCoef <- do.call(cbind, RegCoef); RegCoef\n```\n:::\n\n\n\nTo perform the $\\upchi$^2^ test (to compare the fit of the two models), apply the `anova()` function to the two models.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nReduce(anova, fit)\n```\n:::\n\n\nCompare with the $\\upchi$^2^ statistic and p value in Table 21.2.\n\nIn Equation 21.9 (p. 394), TLG give calculations for R^2^. As was the case with the one-way ANOVA, the relevant SSEs can be obtained from the error variances (see `ErrorVar`) by multiplying error variance by sample size. But again, the multiplication is not needed because sample size will cancel out; that is, substitute the error variances into Equation 21.9.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRsquare <- ErrorVar[\"a\", ] |>\n   Reduce(function(mc, lc) (mc - lc)/mc, x = _)  # Substitute into Eq 21.9\nRsquare\n```\n:::\n\n\n<br />\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R code with minimal commenting\"}\n## One-way ANCOVA\n##\n## Thompson, M., Lie, Y. & Green, S. (2023). Flexible structural equation modeling\n## approaches for analyzing means. In R. Hoyle (Ed.), Handbook of structural\n## equation modeling (2nd ed., pp. 385-408). New York, NY: Guilford Press.\n\n## Load package\nlibrary(lavaan)\n\n## Get the data\nsource(\"satisfactionI.r\")\nhead(df)\n\n## Rearrange the data file\nsource(\"ANOVA_data.r\")\nhead(df)\n\n## The models\nmodels <- list(\n  \"More Constrained\" =\n    \"y ~  c(a, a, a)*1        # Means\n     y ~  c(b, b, b)*preC     # Regression slopes\n     y ~~ c(e, e, e)*y        # Variances\",\n\n  \"Less Constrained\" =\n    \"y ~  c(a1, a2, a3)*1\n     y ~  c(b, b, b)*preC\n     y ~~ c(e, e, e)*y\"\n)\n\n## Fit the models\nfit <- lapply(models, sem, data = df, group = \"x\")\n\n## Get model summaries\n## Check results with \"SEM\" section of Table 21.2\nlapply(fit, summary)\n\n## Extract means, variances, and regression coefficients from list of estimates\n## Get list of estimates\nestimates <- lapply(fit, lavInspect, \"est\"); estimates\n\n## Extract means - in element \"alpha\"\nmeans <- list()\nfor (i in names(models)){\n   means[[i]] <- estimates[[i]] |>\n      lapply(\"[[\", \"alpha\") |>       # Means for Y and preC\n      sapply(\"[[\", 1)                # Means for Y\n}\nmeans <- do.call(cbind, means); means\n\n## Extract error variances -  in element \"psi\"\nErrorVar <- list()\nfor (i in names(models)){\n   ErrorVar[[i]] <- estimates[[i]] |>\n      lapply(\"[[\", \"psi\")  |>        # Extract \"psi\" element\n      sapply(\"[[\", 1, 1)             # 1st row, 1st column of \"psi\"\n}\nErrorVar <- do.call(cbind, ErrorVar); ErrorVar\n\n## Extract regression coefficients -  in element \"beta\"\nRegCoef <- list()\nfor (i in names(models)){\n   RegCoef[[i]] <- estimates[[i]] |>\n      lapply(\"[[\", \"beta\")  |>       # Extract \"beta\" element\n      sapply(\"[[\", 1, 2)             # 1st row, 2nd column of \"beta\"\n}\nRegCoef <- do.call(cbind, RegCoef); RegCoef\n\n## Contrast model fits\n## Check with chi sq statistic and p value in Table 21.2\nReduce(anova, fit)\n\n## R square\n## Check with Equation 21.9\nRsquare <- ErrorVar[\"a\", ] |>\n   Reduce(function(mc, lc) (mc - lc)/mc, x = _)  # Substitute into Eq 21.9\nRsquare\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R code to get data file - `satisfactionI.r`\"}\n### Data for Tables 21.1, 21.2, 21.3, 21.4 ###\n\ndf <- structure(list(x = c(\"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \n\"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"b\", \"b\", \"b\", \n\"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"c\", \"c\", \"c\", \"c\", \n\"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \n\"c\"), g = c(\"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \"m\", \n\"m\", \"m\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \"m\", \"m\", \"m\", \"f\", \"f\", \n\"f\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \n\"f\", \"f\", \"f\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\"), \n    c = c(\"before\", \"before\", \"before\", \"before\", \"before\", \"before\", \n    \"before\", \"before\", \"before\", \"after\", \"after\", \"after\", \n    \"after\", \"after\", \"after\", \"after\", \"after\", \"after\", \"before\", \n    \"before\", \"before\", \"before\", \"before\", \"before\", \"after\", \n    \"after\", \"after\", \"after\", \"after\", \"after\", \"before\", \"before\", \n    \"before\", \"before\", \"before\", \"before\", \"before\", \"before\", \n    \"before\", \"after\", \"after\", \"after\", \"after\", \"after\", \"after\", \n    \"after\", \"after\", \"after\"), y = c(21, 19, 22, 21, 24, 23, \n    21, 24, 23, 22, 22, 24, 25, 27, 30, 22, 23, 24, 23, 23, 21, \n    19, 22, 21, 30, 26, 22, 25, 26, 27, 27, 25, 24, 25, 23, 22, \n    23, 28, 26, 34, 30, 26, 26, 27, 28, 29, 40, 42)), class = \"data.frame\", row.names = c(NA, \n-48L))\n\n\nhead(df)\n\n## x - Coping Strategy (a - No strategy; b - Discussion; c - Exercise)\n## g - Gender\n## c - before/after \n## y - dependent variable (Life Satisfaction)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R code to rearrange data file - `ANOVA_data.r`\"}\n### Data for Tables 21.1, 21.2, 21.3, 21.4 ###\n\n## Reshape data - long to wide\ntab <- 0.5 * table(df$x)  # in each condition\ndf$id <- c(rep(1:tab[1], 2), rep(1:tab[2], 2), rep(1:tab[3], 2))  # id variable \n\ndf <- reshape(df, timevar = \"c\", idvar = c(\"id\", \"x\", \"g\"), varying = c(\"pre\", \"y\"), \n   direction = \"wide\")\n\n\ndf <- within(df, {\n## Grand mean centered \"pre\" - the before scores\n   preC <- scale(pre, scale = FALSE)\n\n## Dummy variables for \"Coping Startegy\"\n   x1 <- ifelse(x == \"a\", 1, 0)\n   x2 <- ifelse(x == \"b\", 1, 0)\n   x3 <- ifelse(x == \"c\", 1, 0)\n\n## Drop the id variable\n   id <- NULL\n\n## Gender X Coping Strategy interaction\n  sg <- interaction(x, g, sep = \"\")\n\n## Dummy variables for interaction\n  dummies <- model.matrix(~ sg - 1)\n})\n\n## Unnest the nested 'dummies' matrix, and rename its colomns\ndf <- do.call(data.frame, df)\nnames(df) <- gsub(\"dummies.sg\", \"\", names(df))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}