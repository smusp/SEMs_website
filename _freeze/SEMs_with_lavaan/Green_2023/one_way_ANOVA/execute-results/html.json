{
  "hash": "a0db00a04dd0a0b72f15fc988cd5a851",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"One-Way ANOVA\"\nhighlight-style: solarized\n\nembed-resources: true\n\nexecute:\n  eval: false\n---\n\n\n::: {.cell}\n\n:::\n\n\nThompson, M., Lie, Y. & Green, S. (2023). Flexible structural equation modeling approaches for analyzing means. In R. Hoyle (Ed.), *Handbook of structural equation modeling* (2nd ed., pp. 385-408). New York, NY: Guilford Press.\n\nThis example shows the SEM approach to a one-way ANOVA. Results are reported in Table 21.1 (p. 389).\n\nThe data are described at the top of page 388. Thompson, Lie & Green (TLG) claim that the data are available in supplementary materials but I'm unable to locate it. However, the data are available in Mplus data files in supplementary materials for the 1st edition. I've collected the data into a more convenient format (see the next section for getting the data), but it is in a \"long\" format. It needs to be rearranged from \"long\" to \"wide\".\n\n\n#### Load package and get the data\n\nLoad the **lavaan** package, and run `satisfactionI.r` and `ANOVA_data.r` to get and rearrange the data (`satisfactionI.r` and `ANOVA_data.r` are available at the end of this post). The data will be in the `df` data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lavaan)\n\nsource(\"satisfactionI.r\")\nhead(df)\n\nsource(\"ANOVA_data.r\")\nhead(df)\n```\n:::\n\n\nThe variables used in this example are:\n\n - x - Coping Strategy (\"a\" - no strategy; \"b\" - discussion; \"c\" - exercise)\n - y - dependent variable (\"after\" Life-Satisfaction scores)\n\n\n#### The models\n\nThe SEM model for one-way ANOVA is shown in Fig 21.1 (p. 391), and is reproduced below. The diagram shows the \"Less Constrained\" model - the three means, represented by the labels on the arrows connecting the \"1\" to the dependent variable, differ. To be consistent with the ANOVA assumption of homogeneity of variances, the residual variances are constrained to be equal.\n\n![](../../Drawing_SEMs/Green_2023/one_way_ANOVA.svg){fig-align=\"center\"}\n\nTwo models are fitted. The model statements are shown below. The \"More Constrained\" model constrains the means (each with the same label \"a\") to equality. The \"Less Constrained\" model allows the means (represented by the labels \"a1\", \"a2\", and \"a3\") to differ across the groups. (Alternatively, this line could have been written as `y ~ 1`; that is, with no label, the means are freely estimated in each group. I leave the labels in to be consistent with the diagram of the model.) In both models the residual variances (each with the same label \"e\") are constrained to equality.\n\nIn what follows, I use lists. The model statements are placed into a list, then I use the `lapply()` or `sapply()` function to perform operations on each element in the list (such as `sem()` to run the analyses, or `summary()` to return summaries of the analyses, or `[[` to extract elements); and I use the `Reduce()` function when I need to perform operations across the two models (such as `anova()` to constrast the fit of the two models).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels <- list(\n  \"More Constrained\" =\n    \"y ~  c(a, a, a)*1     # Means\n     y ~~ c(e, e, e)*y     # Variances\",\n\n  \"Less Constrained\" =\n    \"y ~  c(a1, a2, a3)*1\n     y ~~ c(e, e, e)*y\"\n)\n```\n:::\n\n\n\n#### Fit the models and get the results\n\nThe `lapply()` function applies the `sem()` function to the two elements of the `models` list (with `data` set to `df`, and `group` set to the `\"x\"` variable).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- lapply(models, sem, data = df, group = \"x\")\n\nlapply(fit, summary)\n```\n:::\n\n\nThe \"SEM\" sections of Table 21.1 show the means, pooled error variances, and the $\\upchi$^2^ test.\n\nThe summaries show \"Intercepts\" (that is, the estimated means) and \"Variances\" (that is, the error variances) for each \"Coping Strategy\" group for both models. Compare with means and pooled error variances in the SEM section in Table 21.1.\n\nRather than, or perhaps, as well as, searching through the model summaries for the means and variances, they can be extracted from a list of estimates of model parameters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Get list of estimates\nestimates <- lapply(fit, lavInspect, \"est\"); estimates\n\n## Extract means - in element \"nu\"\nmeans <- list()\nfor (i in names(models)) {\n   means[[i]] <- estimates[[i]] |>\n      sapply(\"[[\", \"nu\")\n}\nmeans <- do.call(cbind, means); means\n\n## Extract error variances - in element \"theta\"\nErrorVar <- list()\nfor (i in names(models)) {\n   ErrorVar[[i]] <- estimates[[i]] |>\n      sapply(\"[[\", \"theta\")\n}\nErrorVar <- do.call(cbind, ErrorVar); ErrorVar\n```\n:::\n\n\nTo perform the $\\upchi$^2^ test (to compare the fit of the two models), apply the `anova()` function to the two models.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nReduce(anova, fit)\n```\n:::\n\n\nCompare with the $\\upchi$^2^ statistic and p value in Table 21.1.\n\nOn page 390, TLG give model fit statistics for both models. These are available in the anova output above, or they can be extracted separately from the list of fit measures. First, a function to extract the $\\upchi$^2^ statistic, degrees of freedom, and the p value, then that function is applied to both models.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGetFit <- function(fit) {\n   tab <- fitMeasures(fit, c(\"chisq\", \"df\", \"pvalue\"))\n   tab <- round(tab, 3)\n   return(tab)\n}\n\nsapply(fit, GetFit)\n```\n:::\n\n\nNote: Neither model fits well.\n\nTLG mention the calculation for R^2^ (p. 390). The relevant SSEs can be obtained from the error variances (see `ErrorVar`) by multiplying error variance by sample size. However, note that multiplication is not needed because sample size will cancel out; that is, substitute the error variances into Equation 21.4.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRsquare <- ErrorVar[\"a\", ] |>\n   Reduce(function(mc, lc) (mc - lc)/mc, x = _)  # Substitute into Eq 21.4\nRsquare\n```\n:::\n\n\n\n#### Relaxing assumption of homogeneity of variances\n\nTLG do not run these models though they make reference to them. The model statements when the homogeneity of variances assumption is relaxed are shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels <- list(\n  \"More Constrained\" =\n    \"y ~  c(a, a, a)*1         # Means\n     y ~~ c(e1, e2, e3)*y      # Variances\",\n\n  \"Less Constrained\" =\n    \"y ~  c(a1, a2, a3)*1\n     y ~~ c(e1, e2, e3)*y\"\n)\n```\n:::\n\n\nRun the models and get the summaries. In this analysis I use the \"mlm\" estimator, a robust ML estimator; that is, the normality assumption is relaxed also.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- lapply(models, sem, data = df, group = \"x\", estimator = \"mlm\")\nlapply(fit, summary)\n```\n:::\n\n\nThis time, the \"Less Constrained\" model is just identified - a perfect fit.\n\n<br />\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R code with minimal commenting\"}\n## One-way ANOVA\n##\n## Thompson, M., Lie, Y. & Green, S. (2023). Flexible structural equation modeling\n## approaches for analyzing means. In R. Hoyle (Ed.), Handbook of structural\n## equation modeling (2nd ed., pp. 385-408). New York, NY: Guilford Press.\n\n## Load package\nlibrary(lavaan)\n\n## Get the data\nsource(\"satisfactionI.r\")\nhead(df)\n\n## Rearrange the data file\nsource(\"ANOVA_data.r\")\nhead(df)\n\n## The models\nmodels <- list(\n  \"More Constrained\" =\n    \"y ~  c(a, a, a)*1     # Means\n     y ~~ c(e, e, e)*y     # Variances\",\n\n  \"Less Constrained\" =\n    \"y ~  c(a1, a2, a3)*1\n     y ~~ c(e, e, e)*y\"\n)\n\n## Fit the models\nfit <- lapply(models, sem, data = df, group = \"x\")\n\n## Get model summaries\n## Check results with \"SEM\" section of Table 21.1\nlapply(fit, summary)\n\n## Extract means and variances from list of estimates\n## Get list of estimates\nestimates <- lapply(fit, lavInspect, \"est\"); estimates\n\n## Extract means - in element \"nu\"\nmeans <- list()\nfor (i in names(models)) {\n   means[[i]] <- estimates[[i]] |>\n      sapply(\"[[\", \"nu\")\n}\nmeans <- do.call(cbind, means); means\n\n## Extract error variances - in element \"theta\"\nErrorVar <- list()\nfor (i in names(models)) {\n   ErrorVar[[i]] <- estimates[[i]] |>\n      sapply(\"[[\", \"theta\")\n}\nErrorVar <- do.call(cbind, ErrorVar); ErrorVar\n\n## Contrast model fits\n## Check with chi sq statistic and p value in Table 21.1\nReduce(anova, fit)\n\n## Fit for each model - Chi squares\n## Check with values on page 390\n## First, a function to extract chi squares\nGetFit <- function(fit) {\n   tab <- fitMeasures(fit, c(\"chisq\", \"df\", \"pvalue\"))\n   tab <- round(tab, 3)\n   return(tab)\n}\n\nsapply(fit, GetFit)\n\n## R square\n## Check with Equation 21.4\nRsquare <- ErrorVar[\"a\", ] |>\n   Reduce(function(mc, lc) (mc - lc)/mc, x = _)  # Substitute into Eq 21.4\nRsquare\n\n## Relax homogeneity of variances assumption\nmodels <- list(\n  \"More Constrained\" =\n    \"y ~  c(a, a, a)*1         # Means\n     y ~~ c(e1, e2, e3)*y      # Variances\",\n\n  \"Less Constrained\" =\n    \"y ~  c(a1, a2, a3)*1\n     y ~~ c(e1, e2, e3)*y\"\n)\n\n## Run the model and get the summary\nfit <- lapply(models, sem, data = df, group = \"x\", estimator = \"mlm\")\nlapply(fit, summary)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R code to get data file - `satisfactionI.r`\"}\n### Data for Tables 21.1, 21.2, 21.3, 21.4 ###\n\ndf <- structure(list(x = c(\"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \n\"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"b\", \"b\", \"b\", \n\"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"c\", \"c\", \"c\", \"c\", \n\"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \n\"c\"), g = c(\"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \"m\", \n\"m\", \"m\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \"m\", \"m\", \"m\", \"f\", \"f\", \n\"f\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \n\"f\", \"f\", \"f\", \"m\", \"m\", \"m\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\"), \n    c = c(\"before\", \"before\", \"before\", \"before\", \"before\", \"before\", \n    \"before\", \"before\", \"before\", \"after\", \"after\", \"after\", \n    \"after\", \"after\", \"after\", \"after\", \"after\", \"after\", \"before\", \n    \"before\", \"before\", \"before\", \"before\", \"before\", \"after\", \n    \"after\", \"after\", \"after\", \"after\", \"after\", \"before\", \"before\", \n    \"before\", \"before\", \"before\", \"before\", \"before\", \"before\", \n    \"before\", \"after\", \"after\", \"after\", \"after\", \"after\", \"after\", \n    \"after\", \"after\", \"after\"), y = c(21, 19, 22, 21, 24, 23, \n    21, 24, 23, 22, 22, 24, 25, 27, 30, 22, 23, 24, 23, 23, 21, \n    19, 22, 21, 30, 26, 22, 25, 26, 27, 27, 25, 24, 25, 23, 22, \n    23, 28, 26, 34, 30, 26, 26, 27, 28, 29, 40, 42)), class = \"data.frame\", row.names = c(NA, \n-48L))\n\n\nhead(df)\n\n## x - Coping Strategy (a - No strategy; b - Discussion; c - Exercise)\n## g - Gender\n## c - before/after \n## y - dependent variable (Life Satisfaction)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R code to rearrange data file - `ANOVA_data.r`\"}\n### Data for Tables 21.1, 21.2, 21.3, 21.4 ###\n\n## Reshape data - long to wide\ntab <- 0.5 * table(df$x)  # in each condition\ndf$id <- c(rep(1:tab[1], 2), rep(1:tab[2], 2), rep(1:tab[3], 2))  # id variable \n\ndf <- reshape(df, timevar = \"c\", idvar = c(\"id\", \"x\", \"g\"), varying = c(\"pre\", \"y\"), \n   direction = \"wide\")\n\ndf <- within(df, {\n## Grand mean centered \"pre\" - the before scores\n   preC <- scale(pre, scale = FALSE)\n\n## Drop the id variable\n   id <- NULL\n\n## Gender X Coping Strategy interaction\n  sg <- interaction(x, g, sep = \"\")\n})\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}