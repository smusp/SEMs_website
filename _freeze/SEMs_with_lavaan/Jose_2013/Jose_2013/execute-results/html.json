{
  "hash": "4c245f0df608539839e12107e2a6c2d0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mediation\"\nsubtitle: \"Three-variable mediation with cross-sectional data\"\nhighlight-style: solarized\n\nembed-resources: true\n\nexecute:\n  eval: false\n---\n\n\n::: {.cell}\n\n:::\n\n\nJose, P. (2013). *Doing statistical mediation and moderation*. New York, NY: Guilford Press.\n\n\nThis example shows how to obtain a basic three-variable mediation analysis using **lavaan**, including how to obtain indirect and total effects. In Chapter 3 (Basic Mediation, pp. 43-92), Jose describes a basic mediation model involving three variables: Positive Life Events; Happiness; and Gratitude. Positive Life Events has a direct effect on Happiness, but also Positive Life Events has an indirect effect on Happiness via Gratitude.\n\n\n#### Load relevant packages\n\nLoad the **lavaan** and **haven** packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lavaan)\nlibrary(haven)   # To read SPSS data files\n```\n:::\n\n\n\n#### Get the data\n\nThe data are available at the Guilford Press site (note: the url on page 48 is no longer a valid link). The data are contained in an SPSS data file. I use the **haven** package to read SPSS data files. Examine the file structure, in particular, noting the variable names. These will be needed by **lavaan**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"http://www.guilford.com/add/jose/mediation_example.sav\"\ndataset <- data.frame(haven::read_spss(url))\n\nstr(dataset)\nhead(dataset)\nsummary(dataset)\n```\n:::\n\n\nThe names for the three variables are:\n\n* ple  - Positive Life Events\n* grat - Gratitude\n* shs  - Happiness\n\n\n#### The model\n\nThe model is given in Figure 3.3 (p. 46), reproduced below.\n\n![](../../Drawing_SEMs/Jose_2013/Jose_2013.svg){fig-align=\"center\"}\n\nIn **lavaan**, mediation effects can be estimated using the `:=` operator. In the diagram, the effects are labelled a, b, and c$'$; in the model statement, they are labelled a, b, and cpr. The labels can then be used to obtain the indirect and total effects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- \"\n  # direct effect\n  shs ~ cpr * ple\n\n  # effects via the mediator\n  grat ~ a * ple\n  shs ~ b * grat\n\n  # indirect effect (a*b)\n  indirect := a * b\n\n  # total effect\n  total := cpr + (a * b) \n\"\n```\n:::\n\n\n\n#### Fit the model and get the results\n\nI've requested unstandardised and standardised effects, and R^2^ values. For the standardised effects, see the \"std.all\" column in the output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- sem(model, data = dataset)\nsummary(fit, rsquare = TRUE, standardized = TRUE)   # Check with Tables 3.2-3.5\n```\n:::\n\n\nJose conducts mediation analysis using regressions. The results are presented in Tables 3.2 to 3.5 (pp. 49-52). The unstandardised and standardised coefficients in the tables agree with the **lavaan** output.\n\nThe regression summary tables show the constants (that is, the intercepts). If intercepts are required, include `meanstructure = TRUE` in the `sem()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_intercepts <- sem(model, data = dataset, meanstructure = TRUE)\nsummary(fit_intercepts, rsquare = TRUE, standardized = TRUE)\n```\n:::\n\n\nOn pages 53 and 54, Jose shows how to calculate and test the statistical significance of Sobel's z-value (that is, testing the significance of the indirect effect). Do not rely on that test. Also, do not rely of the t-test for the indirect effect given in the **lavaan** output. It is better to calculate confidence intervals, although the symmetric confidence interval presented in Table 3.7 (p. 55) is no better than the test for Sobel's z-value. The asymmetric CI presented in Table 3.8 (p. 56) is possibly better. In **lavaan**, bootstrap CIs can be calculated.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_boot <- sem(model, data = dataset, se = \"bootstrap\", bootstrap = 2000)\nsummary(fit_boot, standardized = TRUE, ci = TRUE)\nparameterEstimates(fit_boot, boot.ci.type = \"perc\")\n```\n:::\n\n\n<br />\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R code with minimal commenting\"}\n## Chapter 3 (Basic Mediation, pp. 43-92) in:\n##   Jose, P. (2013). Doing statistical mediation and moderation.\n##   New York, NY: Guilford Press.\n\n## Load packages\nlibrary(lavaan)\nlibrary(haven)   # To read SPSS data files\n\n## Get the data from Guilford Press web site\nurl <- \"http://www.guilford.com/add/jose/mediation_example.sav\"\ndataset <- data.frame(haven::read_spss(url))\n\nstr(dataset)\nhead(dataset)\nsummary(dataset)\n\n## The model\nmodel <- \"\n  # direct effect\n  shs ~ cpr * ple\n\n  # effects via the mediator\n  grat ~ a * ple\n  shs ~ b * grat\n\n  # indirect effect (a*b)\n  indirect := a * b\n\n  # total effect\n  total := cpr + (a * b)\n\"\n\n## Fit the model and get the summary\nfit <- sem(model, data = dataset)\nsummary(fit, rsquare = TRUE, standardized = TRUE)   # Check with Tables 3.2-3.5\n\n## To get intercepts\nfit_intercepts <- sem(model, data = dataset, meanstructure = TRUE)\nsummary(fit_intercepts, rsquare = TRUE, standardized = TRUE)\n\n## To get bootstrap CIs\nfit_boot <- sem(model, data = dataset, se = \"bootstrap\", bootstrap = 2000)\nsummary(fit_boot, standardized = TRUE, ci = TRUE)\nparameterEstimates(fit_boot, boot.ci.type = \"perc\")\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}